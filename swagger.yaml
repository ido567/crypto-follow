swagger: '2.0'
info:
  version: 1.0.0
  title: Crypto Follow
  description: An API for Crypto Follow site
host: cryptoFollow.dev
basePath: /v2
schemes:
- http
paths:
  /assets:
    get: 
      summary: Get assets
      operationId: getAssets
      tags:
        - Asset
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Asset'
    post:
      summary: Create an asset
      operationId: createAseet
      tags:
        - Asset
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/Asset'
      responses:
        201:
          description: OK
          schema:
            $ref: '#/definitions/Asset'

  '/assets/{id}':
    get:
      summary: Get an asset
      operationId: getAsset
      tags:
        - Asset
      parameters: 
        - name: id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Asset'
          
    put:
      summary: Update as asset
      operationId: updateAsset
      tags:
        - Asset
      parameters: 
        - name: id
          in: path
          required: true
          type: integer
          
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/Asset'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Asset'
            
    delete:
      summary: Delete as asset
      operationId: deleteAsset
      tags:
        - Asset
      parameters: 
        - name: id
          in: path
          required: true
          type: integer
          
      responses:
        200:
          description: OK
  
  '/assets/{id}/feeds':
    get:
      summary: Get feeds by asset
      operationId: getAssetFeeds
      tags:
        - Asset
        - Feed
      parameters: 
        - name: id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Feed'
  
  '/feeds':
    get:
      summary: Get feeds
      operationId: getFeeds
      tags: 
        - Feed
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Feed'
          
    post:
      summary: Create a feed
      operationId: createFeed
      tags:
        - Feed
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/Feed'
      responses:
        201:
          description: OK
          schema:
            $ref: '#/definitions/Feed'

  '/feeds/{id}':
    get:
      summary: Get a feed
      operationId: getFeed
      tags:
        - Feed
      parameters: 
        - name: id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Feed'
          
    put:
      summary: Update a feed
      operationId: updateFeed
      tags:
        - Feed
      parameters: 
        - name: id
          in: path
          required: true
          type: integer
          
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/Feed'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Feed'
            
    delete:
      summary: Delete a Feed
      operationId: deleteFeed
      tags:
        - Feed
      parameters: 
        - name: id
          in: path
          required: true
          type: integer
          
      responses:
        200:
          description: OK

definitions:
  Asset:
    type: object
    properties:
      id:
        type: integer
        readOnly: true
        example: 69c1fee0-34bd-4045-8024-1864e6eff03e
      name:
        type: string
        example: bitcoin
      symbol:
        type: string
        example: BTC
      created_at:
        type: string
        format: date-time
        readOnly: true
        example: '2017-07-08 08:46:34'
      updated_at:
        type: string
        format: date-time
        readOnly: true
        example: '2017-07-08 08:46:34'
        
  Feed:
    type: object
    properties:
      id:
        type: integer
        readOnly: true
        example: 69c1fee0-34bd-4045-8024-1864e6eff03e
      source:
        type: string
        enum: 
          - twitter
        example: twitter
      external_id:
        type: string
        example: 69c1fee0-34bd-4045-8024-1864e6eff03e